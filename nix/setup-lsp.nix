# a bunch of path hacks to get clangd to pretend I'm working inside QMK firmware's tree
# generates a .clangd file and a stub header for LAYOUT_moonlander since this is a macro
# which is generated by a build step, we just fake it here for LSP purposes, it works
# at build time and we just need the LSP type help.
{ pkgs, qmk-firmware, ... }:
(pkgs.writeShellScriptBin "setup-lsp" ''
    set -e

    echo "🔍 Finding all QMK include directories..."

    # NUCLEAR EXCLUSION: Block ALL STM32 except F3
    QMK_INCLUDES=$(${pkgs.findutils}/bin/find "${qmk-firmware}" \
      -type d \
      -not -path "*/.*" \
      -not -path "*/tests/*" \
      -not -path "*/docs/*" \
      -not -path "*/.build/*" \
      -not -path "*/modules/*" \
      -not -path "*/lib/chibios/os/common/ext/ST/STM32F0*" \
      -not -path "*/lib/chibios/os/common/ext/ST/STM32F1*" \
      -not -path "*/lib/chibios/os/common/ext/ST/STM32F2*" \
      -not -path "*/lib/chibios/os/common/ext/ST/STM32F4*" \
      -not -path "*/lib/chibios/os/common/ext/ST/STM32F7*" \
      -not -path "*/lib/chibios/os/common/ext/ST/STM32L0*" \
      -not -path "*/lib/chibios/os/common/ext/ST/STM32L1*" \
      -not -path "*/lib/chibios/os/common/ext/ST/STM32L4*" \
      -not -path "*/lib/chibios/os/common/ext/ST/STM32G0*" \
      -not -path "*/lib/chibios/os/common/ext/ST/STM32H7*" \
      -not -path "*/lib/chibios/os/common/startup/ARMCMx/devices/STM32F0*" \
      -not -path "*/lib/chibios/os/common/startup/ARMCMx/devices/STM32F1*" \
      -not -path "*/lib/chibios/os/common/startup/ARMCMx/devices/STM32F2*" \
      -not -path "*/lib/chibios/os/common/startup/ARMCMx/devices/STM32F4*" \
      -not -path "*/lib/chibios/os/common/startup/ARMCMx/devices/STM32L0*" \
      -not -path "*/lib/chibios/os/common/startup/ARMCMx/devices/STM32L1*" \
      -not -path "*/lib/chibios/os/hal/ports/STM32/STM32F0*" \
      -not -path "*/lib/chibios/os/hal/ports/STM32/STM32F1*" \
      -not -path "*/lib/chibios/os/hal/ports/STM32/STM32F2*" \
      -not -path "*/lib/chibios/os/hal/ports/STM32/STM32F4*" \
      -not -path "*/lib/chibios/os/hal/ports/STM32/STM32F7*" \
      -not -path "*/lib/chibios/os/hal/ports/STM32/STM32L0*" \
      -not -path "*/lib/chibios/os/hal/ports/STM32/STM32L1*" \
      -not -path "*/lib/chibios/os/hal/ports/STM32/STM32L4*" \
      -not -path "*/lib/chibios/os/hal/ports/STM32/STM32G0*" \
      -not -path "*/lib/chibios/os/hal/ports/STM32/STM32H7*" \
      -not -path "*/platforms/chibios/boards/*STM32F0*" \
      -not -path "*/platforms/chibios/boards/*STM32F1*" \
      -not -path "*/platforms/chibios/boards/*STM32F2*" \
      -not -path "*/platforms/chibios/boards/*STM32F4*" \
      -not -path "*/platforms/chibios/boards/*STM32L0*" \
      -not -path "*/platforms/chibios/boards/*STM32L1*" \
      -not -path "*/platforms/chibios/boards/*_F0*" \
      -not -path "*/platforms/chibios/boards/*_F1*" \
      -not -path "*/platforms/chibios/boards/*_F2*" \
      -not -path "*/platforms/chibios/boards/*_F4*" \
      -not -path "*/platforms/chibios/boards/*_L0*" \
      -not -path "*/platforms/chibios/boards/*_L1*" \
      -not -path "*/lib/chibios-contrib/os/hal/ports/STM32/STM32F0*" \
      -not -path "*/lib/chibios-contrib/os/hal/ports/STM32/STM32L0*" \
      | sed 's|^|    - -I|')

    echo "✅ Found $(echo "$QMK_INCLUDES" | wc -l) QMK include paths"

    echo "🎹 Generating LAYOUT_moonlander stub header..."
    mkdir -p .clangd-stubs

    cat > .clangd-stubs/layout_moonlander.h << 'LAYOUT_STUB'
  #pragma once
  #include <stdint.h>

  #define LAYOUT_moonlander( \
      k00, k01, k02, k03, k04, k05, k06,           k60, k61, k62, k63, k64, k65, k66, \
      k10, k11, k12, k13, k14, k15, k16,           k70, k71, k72, k73, k74, k75, k76, \
      k20, k21, k22, k23, k24, k25, k26,           k80, k81, k82, k83, k84, k85, k86, \
      k30, k31, k32, k33, k34, k35,                     k91, k92, k93, k94, k95, k96, \
      k40, k41, k42, k43, k44,      k53,           kb3,      ka2, ka3, ka4, ka5, ka6, \
                          k50, k51, k52,           kb4, kb5, kb6 \
  ) \
  { \
      { k00, k01, k02, k03, k04, k05, k06 }, \
      { k10, k11, k12, k13, k14, k15, k16 }, \
      { k20, k21, k22, k23, k24, k25, k26 }, \
      { k30, k31, k32, k33, k34, k35, 0 }, \
      { k40, k41, k42, k43, k44, 0, 0 }, \
      { k50, k51, k52, k53, 0, 0, 0 }, \
      { k60, k61, k62, k63, k64, k65, k66 }, \
      { k70, k71, k72, k73, k74, k75, k76 }, \
      { k80, k81, k82, k83, k84, k85, k86 }, \
      { 0, k91, k92, k93, k94, k95, k96 }, \
      { 0, 0, ka2, ka3, ka4, ka5, ka6 }, \
      { 0, 0, 0, kb3, kb4, kb5, kb6 } \
  }
  LAYOUT_STUB

    STUB_PATH="$(pwd)/.clangd-stubs/layout_moonlander.h"
    echo "   Created stub at: $STUB_PATH"

    echo "📝 Creating .clangd configuration..."

    cat > .clangd << EOF
  CompileFlags:
    Add:
      # FORCE clang to show ALL errors (don't stop after 20)
      - -ferror-limit=0
      # Force it to use C instead of Objective-C++ (for whatever reason the .h file is defaulting to that)
      - -x
      - c

      # System headers
      - -resource-dir=${pkgs.clang}/resource-root
      - -isystem
      - ${pkgs.clang}/resource-root/include
      - -isystem
      - ${
        if pkgs.stdenv.isLinux then
          "${pkgs.glibc.dev}/include"
        else
          "$(xcrun --sdk macosx --show-sdk-path)/usr/include"
      }

      # Standard C types
      - -Duint8_t=unsigned char
      - -Duint16_t=unsigned short
      - -Duint32_t=unsigned int
      - -Duint64_t=unsigned long long
      - -Dint8_t=signed char
      - -Dint16_t=short
      - -Dint32_t=int
      - -Dint64_t=long long
      - -Dintmax_t=long long
      - -Duintmax_t=unsigned long long
      - -Dsize_t=unsigned long
      - -Dssize_t=long
      - -DUINT8_MAX=255
      - -DUINT16_MAX=65535
      - -Dbool=_Bool
      - -Dtrue=1
      - -Dfalse=0
      - -DNULL=((void*)0)

      # LAYOUT_moonlander stub (HIGHEST PRIORITY)
      - -I$STUB_PATH/..
      - -include$STUB_PATH

      # ChibiOS RTOS headers (for CH_CFG_ST_FREQUENCY, sysinterval_t)
      - -I${qmk-firmware}/lib/chibios/os/rt/include
      - -I${qmk-firmware}/lib/chibios/os/common/ports/ARMv7-M
      - -I${qmk-firmware}/platforms/chibios
      - -I${qmk-firmware}/platforms/chibios/boards/GENERIC_STM32_F303XC
      # explicitly include these headers to get around conditional includes
      - -include${qmk-firmware}/platforms/chibios/boards/GENERIC_STM32_F303XC/configs/chconf.h
      - -include${qmk-firmware}/lib/chibios/os/rt/include/chtime.h
      - -DCH_CFG_ST_FREQUENCY=10000
      - -DCH_CFG_ST_RESOLUTION=32
      # Force-include ChibiOS configuration (defines sysinterval_t)
      - -include${qmk-firmware}/platforms/chibios/boards/GENERIC_STM32_F303XC/configs/chconf.h
      - -include${qmk-firmware}/lib/chibios/os/rt/include/chtime.h

      # QMK timing functions (stub macros for LSP)
      - -D_delay_ms(ms)=do{}while(0)
      - -D_delay_us(us)=do{}while(0)

      ## Extra feature headers
      # Leader Key functions
      - -include${qmk-firmware}/quantum/leader.h

      # Unicode function (set_unicode_input_mode, send_unicode_string) stubs
      - -include${qmk-firmware}/quantum/unicode/unicode.h
      - -include${qmk-firmware}/quantum/process_keycode/process_unicode_common.h

      # Colors
      - -include${qmk-firmware}/quantum/color.h

      # OS Detection functions (detected_host_os, os_is_macos, etc.)
      - -include${qmk-firmware}/quantum/os_detection.h

      # Your local project
      - -I$(pwd)
      - -I$(pwd)/src

      # C standard
      - -std=gnu11

      # STM32F303 ONLY
      - -DSTM32F303xC
      - -DSTM32F303CC
      - -DSTM32F3
      - -DSTM32F303
      - -DSTM32F30X
      - -DSTM32F3XX
      - -DSTM32
      - -DCORTEX_USE_FPU=TRUE
      - -DUSE_FPU=TRUE
      - -DARM_MATH_CM4

      # BLOCK all other STM32 families
      - -USTM32F0
      - -USTM32F0XX
      - -USTM32F0xx
      - -USTM32F1
      - -USTM32F1XX
      - -USTM32F2
      - -USTM32F4
      - -USTM32L0
      - -USTM32L0XX
      - -USTM32L0xx
      - -USTM32L1
      - -USTM32L4
      - -USTM32G0
      - -USTM32H7

      # QMK keyboard defines
      - -DQMK_KEYBOARD="zsa/moonlander"
      - -DQMK_KEYBOARD_H="moonlander.h"
      - -DKEYBOARD_zsa_moonlander

      # Features
      - -DRGB_MATRIX_ENABLE
      - -DRGB_MATRIX_LED_COUNT=72
      - -DAUDIO_ENABLE
      - -DTAP_DANCE_ENABLE
      - -DRAW_ENABLE
      - -DRAW_HID_ENABLE
      - -DSEND_STRING_ENABLE
      - -DMATRIX_ROWS=12
      - -DMATRIX_COLS=7
      - -DLEADER_ENABLE
      - -DUNICODE_ENABLE
      - -DOS_DETECTION_ENABLE

      # ChibiOS
      - -DHAL_USE_I2C=TRUE
      - -DHAL_USE_SPI=TRUE
      - -DCHIBIOS_RT
  EOF

    echo "$QMK_INCLUDES" >> .clangd

    cat >> .clangd << 'CLANGD_END3'

    Remove:
      - -mno-thumb-interwork
      - -mthumb
      - -mcpu=*
      - -march=*
      - -mfloat-abi=*
      - -mfpu=*
      - --target=arm-none-eabi
      - -mno-unaligned-access
      - -fsingle-precision-constant
      - -specs=*
      - --specs=*
      - -mmcu=*
      - -MD
      - -MP
      - -MF

  Diagnostics:
    Suppress:
      - init_element_not_constant
    UnusedIncludes: None
    MissingIncludes: None

  Index:
    Background: Build
  CLANGD_END3

    echo ""
    echo "✅ .clangd created!"
    echo "   QMK paths: $(echo "$QMK_INCLUDES" | wc -l)"
    echo "🔄 Restart clangd to apply changes."
'')
